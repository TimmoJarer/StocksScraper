from bs4 import BeautifulSoup
import requests
#import StockDataParser
import StockDataRetriever
import Stock
import matplotlib.pyplot as plt
import numpy as np

offset = 0
maxoffset = 0
urls = []
pages = []
# sample link generated by searching entering search parameter on the yahoo stock screener.
# targetPage = requests.get('https://uk.finance.yahoo.com/screener/unsaved/adb450a3-ad63-4b24-b1e7-1a8137d40078?count=100&dependentField=sector&dependentValues=&offset=0{x}'.format(x = offset)).text
targetPage = requests.get('https://finance.yahoo.com/screener/unsaved/b6e98804-7cbd-4ee8-84f9-2894c2b3fb4b?count=100&dependentField=sector&dependentValues=&offset={x}'.format(x = offset)).text
page = BeautifulSoup(targetPage, 'lxml')
record = page.find('span', class_='Mstart(15px) Fw(500) Fz(s)').text
recordSlices = record.split(" ")
offset = recordSlices[0].split("-")[1]
offset = int(offset)
maxoffset = recordSlices[2]
maxoffset = int(maxoffset)
# print("max offset: {maxoffset}".format(maxoffset = maxoffset))
# print("offset: {offset}".format(offset = offset))

for i in range(0, maxoffset, offset):
    # source = requests.get('https://uk.finance.yahoo.com/screener/unsaved/adb450a3-ad63-4b24-b1e7-1a8137d40078?count=100&dependentField=sector&dependentValues=&offset=0{x}'.format(x = offset)).text
    source = requests.get('https://finance.yahoo.com/screener/unsaved/b6e98804-7cbd-4ee8-84f9-2894c2b3fb4b?count=100&dependentField=sector&dependentValues=&offset={x}'.format(x = offset)).text
    page = BeautifulSoup(source, 'lxml')
    pages.append(page)
    #print(i)

tables = []


for page in pages:
    #print(page.find('span', class_='Mstart(15px) Fw(500) Fz(s)').text)
    tables.append(page.body.tbody)



stockNames = []



for table in tables:
    for i in range(0, len(table.contents)):
        # stockNames.append(table.contents[i].a.text)
        stockNames.append(table.contents[i].td.a)

stocks = []

for stockName in stockNames:
    tag = str(stockName)
    start = tag.find('title="')
    end = tag.find('">')
    title = tag[(start + len('title="')):end]
    stockNameSplit = stockName.text.split(".")
    # if(len(stockNameSplit) == 2):
    #     stockName = stockNameSplit[0]
    #     stockSuffix = stockNameSplit[1]
    # else:
    #     stockName = stockNameSplit[0]
    #     stockSuffix = ''

    stockName = stockNameSplit[0]
    stockSuffix = stockNameSplit[1]

    stocks.append(Stock.Stock(stockName, title, stockSuffix))

print('Number of Entries: ' + str(len(stocks)))
print('-' * len('Number of Entries: ' + str(len(stocks))))
print()



    

# y = stocks[0].openPriceList[::-1]
# x = np.linspace(0, len(y), len(y))
# plt.plot(x, y)
# plt.show()

    

